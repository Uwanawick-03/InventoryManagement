package inventorymanagementkadse242f035;

import database.DBConnection;
import java.awt.Color;
import java.math.BigDecimal;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class Items extends javax.swing.JPanel {

    private int itemPk = 0;

    public Items() {
        initComponents();
        btnUpdate.setEnabled(false);
        Helper.loadBranchesIntoComboBox(comBoxBranch);
    }

    public void loadItemData() {
        System.out.println("Loading user data");

        DefaultTableModel model = (DefaultTableModel) tableItems.getModel();
        model.setRowCount(0); // Clear previous rows

        try {
            Connection con = DBConnection.DBHelper.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM item");

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("Item_Id"),
                    rs.getString("Item_Name"),
                    rs.getString("Price"),
                    rs.getString("Qty"),
                    rs.getString("Branch")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    public void clearForm() {
        txtItemName.setText("");
        txtItemQty.setText("");
        txtItemPrice.setText("");
        comBoxBranch.setSelectedIndex(-1);

    }

    private boolean validateFields(String formType) {
        if (formType.equals("edit")
                && !txtItemName.getText().equals("")
                && !txtItemPrice.getText().equals("")
                && !txtItemQty.getText().equals("")) {
            return false;
        } else if (formType.equals("new")
                && !txtItemName.getText().equals("")
                && !txtItemPrice.getText().equals("")
                && !txtItemQty.getText().equals("")) {
            return false;

        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableItems = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        txtItemQty = new javax.swing.JTextField();
        comBoxBranch = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtItemPrice = new javax.swing.JTextField();

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1000, 300));

        tableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item Name", "Price", "Qty", "Branch"
            }
        ));
        tableItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableItems);

        jPanel1.setBackground(new java.awt.Color(140, 148, 156));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 500));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 24)); // NOI18N
        jLabel1.setText("Manage Products");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel2.setText("Item Name");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel3.setText("Price");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel4.setText("Quantity");

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        jLabel5.setText("Branch");

        txtItemName.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        txtItemName.setPreferredSize(new java.awt.Dimension(200, 28));

        txtItemQty.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        txtItemQty.setPreferredSize(new java.awt.Dimension(200, 28));

        comBoxBranch.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N

        btnUpdate.setBackground(new java.awt.Color(4, 61, 142));
        btnUpdate.setFont(new java.awt.Font("Microsoft YaHei", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setBorder(null);
        btnUpdate.setPreferredSize(new java.awt.Dimension(89, 29));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(4, 61, 142));
        btnSave.setFont(new java.awt.Font("Microsoft YaHei", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setBorder(null);
        btnSave.setPreferredSize(new java.awt.Dimension(89, 29));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(4, 61, 142));
        btnDelete.setFont(new java.awt.Font("Microsoft YaHei", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(null);
        btnDelete.setPreferredSize(new java.awt.Dimension(89, 29));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(4, 61, 142));
        btnReset.setFont(new java.awt.Font("Microsoft YaHei", 1, 16)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.setPreferredSize(new java.awt.Dimension(89, 29));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtItemPrice.setFont(new java.awt.Font("Microsoft YaHei", 0, 16)); // NOI18N
        txtItemPrice.setPreferredSize(new java.awt.Dimension(200, 28));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtItemQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comBoxBranch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtItemPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(110, 110, 110)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(153, 153, 153))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtItemQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comBoxBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(98, 98, 98)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String itemName = txtItemName.getText();
        String itemPrice = txtItemPrice.getText().trim();
        BigDecimal price;
        try {
            price = new BigDecimal(itemPrice);

            if (price.compareTo(BigDecimal.ZERO) < 0) {
                JOptionPane.showMessageDialog(null, "Price must be a positive number.");
                return;
            }

            // Proceed to save to database
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price format. Use numbers like 19.99");
            return;
        }
        String qty = txtItemQty.getText();
        String branch = (String) comBoxBranch.getSelectedItem();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        } else {
            try {
                Connection con = DBConnection.DBHelper.getConnection();
                PreparedStatement pstmt = con.prepareStatement("update item set Item_Name=?, Price=?, Qty=?, Branch=? where Item_Id=?");
                pstmt.setString(1, itemName);
                pstmt.setString(2, itemPrice);
                pstmt.setString(3, qty);
                pstmt.setString(4, branch);
                pstmt.setInt(5, itemPk);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Item Updated Successfully");
                setVisible(true);
                loadItemData();
                clearForm();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String itemName = txtItemName.getText();
        String itemPrice = txtItemPrice.getText().trim();
        BigDecimal price;
        try {
            price = new BigDecimal(itemPrice);

            if (price.compareTo(BigDecimal.ZERO) < 0) {
                JOptionPane.showMessageDialog(null, "Price must be a positive number.");
                return;
            }

            // Proceed to save to database
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price format. Use numbers like 19.99");
            return;
        }
        String qty = txtItemQty.getText();
        String branch = (String) comBoxBranch.getSelectedItem();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        } else {
            try {
                Connection con = DBConnection.DBHelper.getConnection();
                PreparedStatement pstmt = con.prepareStatement("insert into item (Item_Name, Price, Qty, Branch ) VALUES (?, ?, ?, ?)");
                pstmt.setString(1, itemName);
                pstmt.setString(2, itemPrice);
                pstmt.setString(3, qty);
                pstmt.setString(4, branch);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Item Added Successfully");
                setVisible(true);
                loadItemData();
                clearForm();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String itemName = txtItemName.getText();
        String itemPrice = txtItemPrice.getText().trim();
        BigDecimal price;
        try {
            price = new BigDecimal(itemPrice);

            if (price.compareTo(BigDecimal.ZERO) < 0) {
                JOptionPane.showMessageDialog(null, "Price must be a positive number.");
                return;
            }

            // Proceed to save to database
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price format. Use numbers like 19.99");
            return;
        }
        String qty = txtItemQty.getText();
        String branch = (String) comBoxBranch.getSelectedItem();
        if (validateFields("edit")) {
            JOptionPane.showMessageDialog(null, "Select Item To Delete");
        } else {
            int conDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
            if (conDelete == 0) {
                try {
                    Connection con = DBConnection.DBHelper.getConnection();
                    PreparedStatement pstmt = con.prepareStatement("DELETE FROM `item` WHERE `Item_Id` = ? AND `Item_Name` = ? AND `Price` = ? AND `Qty` = ? AND `Branch` = ?");
                    pstmt.setInt(1, itemPk);
                    pstmt.setString(2, itemName);
                    pstmt.setString(3, itemPrice);
                    pstmt.setString(4, qty);
                    pstmt.setString(5, branch);
                    int rowsAffected = pstmt.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Item Deleted Successfully");
                        setVisible(true);
                        loadItemData();
                        clearForm();
                    } else {
                        JOptionPane.showMessageDialog(null, "Item Not Found");
                    }

                } catch (Exception e) {
                    JOptionPane.showInternalMessageDialog(null, e);

                }
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        setVisible(true);
        clearForm();
        loadItemData();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tableItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemsMouseClicked
        int index = tableItems.getSelectedRow();

        if (index >= 0) {
            TableModel model = tableItems.getModel();

            String id = model.getValueAt(index, 0).toString();
            itemPk = Integer.parseInt(id);

            String itemName = model.getValueAt(index, 1).toString();
            txtItemName.setText(itemName);

            String itemPrice = model.getValueAt(index, 2).toString();
            txtItemPrice.setText(itemPrice);

            String qty = model.getValueAt(index, 3).toString();
            txtItemQty.setEditable(false);
            txtItemQty.setText(qty);

            String branch = model.getValueAt(index, 4).toString();
            comBoxBranch.setSelectedItem(branch);

            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
        }
    }//GEN-LAST:event_tableItemsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comBoxBranch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableItems;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtItemQty;
    // End of variables declaration//GEN-END:variables
}
